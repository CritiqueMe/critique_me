- if @question.public?
  - content_for :og_data do
    %meta{ :property => "fb:app_id", :content => "#{Facebook::CONFIG[:app_id]}" }
    %meta{ :property => "og:type", :content => "#{Facebook::CONFIG[:namespace]}:question" }
    %meta{ :property => "og:url", :content => "#{question_url(@question)}" }
    %meta{ :property => "og:title", :content => @fb_share_template ? @fb_share_template.build_link_display(@question, @question.user) : '' }
    %meta{ :property => "og:description", :content => @fb_share_template ? @fb_share_template.build_description(@question, @question.user) : '' }
    - if @question.photo.url
      %meta{ :property => "og:image", :content => @question.photo.url }
    - else
      %meta{ :property => "og:image", :content => "http://#{SEED_BLOCKS_ENGINE_CONFIG[:host]}/assets/questions/default_share_image.jpg"}

- content_for :extra_css do
  = stylesheet_link_tag "questions/canned"
  = stylesheet_link_tag "questions/qpage"
  = stylesheet_link_tag "share/share"




.cm_content
  .inner_content
    .qcontainer.fuzzy.all_round#qpage

      - if @user.nil?
        %h2 Sign in to View Questions
        %p You must #{link_to "sign up", welcome_path} or #{link_to "log in", sign_in_path} in order to view questions on CritiqueMe.
      - elsif @question.user == @user || @question.public? || @user.invited_to_question?(@question)
        - unless @question.canned_question_id
          .byline #{@question.user.first_last_initial} asked:

        - @questions.each do |q|
          .qcontent{:id => "question_content_#{q.id}"}
            - if q.photo.url
              .qimage= link_to image_tag(q.photo.thumb.url), '#'

            - if @user
              - if @user == q.user
                .buttons.share_question{:data => {:question_id => q.id}}
                  = button_to "Share with Friends", '#'
              - elsif @user.answers.where(:question_id => q.id).count == 0
                .buttons.post_answer
                  = button_to "Submit Answer", '#', :data => {:question_id => q.id}
            .qtext
              = q.question_text_pretty
            .clearer
            .answers
              .header Answers Given
              - if q.answers.count < 5
                #not_enough_answers{:data => {:question_id => q.id}}
                  - if q.user == @user
                    - if q.answers.count > 0
                      You've only gotten #{pluralize q.answers.count, 'answer'} so far!  You must get at least 5 answers to see the results.
                      %br
                      = link_to "Invite more friends now!", '#'
                    - else
                      You haven't gotten any answers to your question yet!
                      %br
                      = link_to "Invite some friends now!", '#'
                  - elsif @user.answers.where(:question_id => q.id) == 0
                    You haven't answered this question yet!
              - elsif q.question_type == Question::QUESTION_TYPES.index(:open_text)
                %ol
                  - q.answers.each do |a|
                    %li= a.open_text_answer
              - elsif q.question_type == Question::QUESTION_TYPES.index(:multiple_choice)
                %ol
                  - q.multiple_choice_options.sort{|a,b| b.answers.count <=> a.answers.count}.each do |mco|
                    %li
                      %b= mco.answer_text
                      %em (#{mco.answers.count})
              - elsif q.question_type == Question::QUESTION_TYPES.index(:true_false)
                %ol
                  %li
                    %b Yes
                    %em (#{q.answers.where(:true_false_answer => true).count})
                  %li
                    %b No
                    %em (#{q.answers.where(:true_false_answer => false).count})
              - elsif q.question_type == Question::QUESTION_TYPES.index(:canned_question)
                %ol
                  - q.canned_question_choices.each do |cqc|
                    %li
                      %b= cqc.friend_name
                      %em (#{q.answers.where(:canned_question_choice_id => cqc.id).count})

              - if @user && a = @user.answers.where(:question_id => q.id).first
                #your_answer
                  %span Your Answer:
                  - if q.question_type == Question::QUESTION_TYPES.index(:open_text)
                    = a.open_text_answer
                  - elsif q.question_type == Question::QUESTION_TYPES.index(:true_false)
                    = a.true_false_answer ? "Yes" : "No"
                  - elsif q.question_type == Question::QUESTION_TYPES.index(:multiple_choice)
                    = a.multiple_choice_option.answer_text
                  - elsif q.question_type == Question::QUESTION_TYPES.index(:canned_question)
                    = a.canned_question_choice.friend_name

              = render :partial => "/questions/answer", :locals => {:question => q, :post_url => post_url}

            - unless @user.nil? || @question.user == @user
              .flagger
                - if @user.flagged_questions.where(:question_id => @question.id).count > 0
                  Thank you for flagging this question.  We will look into it immediately.
                - else
                  .righter= link_to "Flag This Question &raquo;".html_safe, '#', :data => {:question => q.id}
              .flag_dlg{:id => "flag_dlg_#{q.id}", :style => "display:none"}= render :partial => "questions/flag", :locals => {:question => q}
        .clearer

        - if @canned_questions
          #cq_link= link_to "Have some fun answering some questions about your friends!", '#'

      - else  # User can't view this question
        %h2 This question is private!
        %p CritiqueMe respects the privacy of our users!
        %p This question can only be viewed by people who have been invited by the asker.


#share_dialog{:data => {:question_id => @question.id, :autoshow => (@question.user == @user && @question.answers.length < 5 && flash[:show_share] ? 'pop' : 'hide')}}
#post_share_dialog{:data => {:finish_path => params['controller'] == 'welcome' ? path_canned_finished_path : new_question_path}}
- if @question.photo.url
  #qimg_dialog= image_tag @question.photo.url

- if @canned_questions
  #canned_questions= render :partial => "canned/canned_questions"


- content_for :extra_javascripts do
  = javascript_include_tag "questions/answer_question"
  = javascript_include_tag "questions/flag_question"
  = javascript_include_tag "questions/canned_link"
  = javascript_include_tag "questions/photo_dialog"


  - if @question.user == @user
    = javascript_include_tag "questions/show_share"
    = javascript_include_tag "share/share"
  - elsif @user && @question.canned_question_id && @question.canned_question_choices.any?{|cqc| cqc.friend_fb_id == @user.fb_user_id}
    = javascript_include_tag "questions/show_canned"
  - elsif @user && @user.answers.where(:question_id => @question.id).count == 0 && @user.flagged_questions.where(:question_id => @question.id).count == 0
    -# show answer dialog if user hasn't answered it yet and hasn't flagged it already
    = javascript_include_tag "questions/show_answer"
  - elsif params['controller'] == 'welcome' && @user.answers.where(:question_id => @question.id).count > 0
    = javascript_include_tag "questions/show_canned"
